{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1ced388-a6ea-4959-88dd-b0cf8291cb2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "To develop a predictive model for estimating health insurance charges based on demographic and health-related information, follow these steps:\r\n",
    "\r\n",
    "1. Define the Approach\r\n",
    "Objective: Build a regression model to predict health insurance charges.\r\n",
    "\r\n",
    "2. Determine the Type of Machine Learning Problem\r\n",
    "This is a supervised regression problem, as we are predicting a continuous variable (insurance charges).\r\n",
    "\r\n",
    "3. Outline Possible Algorithms\r\n",
    "Possible regression algorithms include:\r\n",
    "\r\n",
    "Linear Regression\r\n",
    "Decision Tree Regressor\r\n",
    "Random Fore\n",
    "Neural Networks\r\n",
    "4. Data Exploration and Preparation\r\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8587cf5a-89f6-4be7-8a80-4c38037ac93b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0c7abadf-58c2-4711-8be7-954520c4429c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>female</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>male</td>\n",
       "      <td>33.770</td>\n",
       "      <td>1</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28</td>\n",
       "      <td>male</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>4449.46200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>male</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>21984.47061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32</td>\n",
       "      <td>male</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age     sex     bmi  children smoker     region      charges\n",
       "0   19  female  27.900         0    yes  southwest  16884.92400\n",
       "1   18    male  33.770         1     no  southeast   1725.55230\n",
       "2   28    male  33.000         3     no  southeast   4449.46200\n",
       "3   33    male  22.705         0     no  northwest  21984.47061\n",
       "4   32    male  28.880         0     no  northwest   3866.85520"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('insurance csv,machine learning task.csv')\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "032b72b0-a0c0-4e86-a315-0d2272407469",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 7 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   age       1338 non-null   int64  \n",
      " 1   sex       1338 non-null   object \n",
      " 2   bmi       1338 non-null   float64\n",
      " 3   children  1338 non-null   int64  \n",
      " 4   smoker    1338 non-null   object \n",
      " 5   region    1338 non-null   object \n",
      " 6   charges   1338 non-null   float64\n",
      "dtypes: float64(2), int64(2), object(3)\n",
      "memory usage: 73.3+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d188de78-a9de-4a72-8a09-6c8889b2cd23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.207025</td>\n",
       "      <td>30.663397</td>\n",
       "      <td>1.094918</td>\n",
       "      <td>13270.422265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14.049960</td>\n",
       "      <td>6.098187</td>\n",
       "      <td>1.205493</td>\n",
       "      <td>12110.011237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1121.873900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>26.296250</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4740.287150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9382.033000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>34.693750</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16639.912515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>53.130000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>63770.428010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age          bmi     children       charges\n",
       "count  1338.000000  1338.000000  1338.000000   1338.000000\n",
       "mean     39.207025    30.663397     1.094918  13270.422265\n",
       "std      14.049960     6.098187     1.205493  12110.011237\n",
       "min      18.000000    15.960000     0.000000   1121.873900\n",
       "25%      27.000000    26.296250     0.000000   4740.287150\n",
       "50%      39.000000    30.400000     1.000000   9382.033000\n",
       "75%      51.000000    34.693750     2.000000  16639.912515\n",
       "max      64.000000    53.130000     5.000000  63770.428010"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "34119d4d-eb4e-4893-b44e-64f2afdbf232",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age         0\n",
       "sex         0\n",
       "bmi         0\n",
       "children    0\n",
       "smoker      0\n",
       "region      0\n",
       "charges     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fc8f0e1c-6f71-44b5-97d4-457e59b613d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Changing the bmi and years of charges data type from float to integer\n",
    "\n",
    "data['bmi'] = data['bmi'].astype('int')\n",
    "data['charges'] = data['charges'].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9e141f97-bfad-4ee3-8e4b-93b9e6fe8fc0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ea70d4e0-13c4-40dd-8bc4-9508c28780f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Droping duplicated rows\n",
    "data.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4cad91bf-7178-408c-ad40-9de2def7f474",
   "metadata": {},
   "outputs": [],
   "source": [
    "this code block provides a visual summary of the health insurance charges in the Dataset, \n",
    "highlighting the mean charges value with a dashed red line.'''\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5a24c04d-86a5-4364-85eb-9776f722bd1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(data['charges'])\n",
    "plt.axvline(data['charges'].mean(), color='red', linestyle='dashed', linewidth=2, label='Mean charges')\n",
    "\n",
    "plt.title('charges')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "122d21af-5aeb-48c3-99da-2a044b4a9575",
   "metadata": {},
   "source": [
    "based on the above chart the health insurance charges is below average"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "76bef442-750b-4f09-a0fb-1d0ab005d163",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(data['charges'])\n",
    "plt.title('Boxplot for charges')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b4a44eee-2f71-4b95-ad8b-69e9acbd1f02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(data['age'])\n",
    "plt.title('Boxplot for age')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "198b60f6-0fa4-4e99-b96e-c194347c06d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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a9euAWter9f/eGdTXV2t+Pj4FusJCQnnve3FCPbxznTs2SxevFgul0u33367Dh06pEOHDmngwIHq27evXnzxRf81Ms2PERcX1+I+vrq2f/9+bdu2TZGRkQFbTEyMjDE6cODABc8HdGS82gVoZwYOHKh169Zp165duvHGG9W1a1d98MEHMsYEBEhVVZWOHz+ubt26+deOHDmicePGqV+/ftq/f79+8IMf6M0332zxGMePH1d1dXVAgPh8PklqESWn69q1q/bt29dife/evZIUMEtrCPbxvhpoZ7Nr1y69//77kqTevXuf8Zh169bpjjvu8P889u/f3+IYn88XcPajW7ducrvdeuGFF854n6398wHCFWc+gHZm69atkuR/xcjw4cN1+PBhvfHGGwHHLVu2zL+/2ZQpU7Rnzx69/vrrWrx4sVavXq3f/e53Z3ycP/7xjwFfL1++XNK535dj+PDh+uSTT/Thhx+2mMXhcOiWW26RJDmdTklSfX39Ob7T8xs+fLjWr1/vj43THy86OlpDhw69qPtdvHixJGnRokV65513Ara1a9cqMjLSHxBpaWlyOp165ZVXAu6jvLxcX3zxRcDanXfeqX/961/q2rWr/4zW6Zut9y4B2r3QXnICXJqaLzhdsmSJ/9Uda9asMRMnTjSSzKhRo/zHNr/aJSYmxhQUFJiysjIzZ84cExkZGfBql0WLFvnvs9mMGTNMZGRkwAWi53q1S1ZWVsCcZ3u1i9frNQsXLjTr1q0zM2fONA6Hw0ybNq3Fbfv372/WrVtnKioqzO7du8/5M9EZLjhtfrVLv379zMsvv2zWrl1rxo4daySZefPm+Y9rvuD0T3/60zkfwxhjjh07ZrxerxkwYMBZjxk9erSJjIw0VVVVxpj/f7XL5MmTTUlJifnDH/5gEhMTTXx8vLnlllv8tzt8+LAZPHiw6dWrl5k/f74pKysz69atM4sWLTL33XefKS8vP+98wKWA+ABC4EyvdvF4PGbQoEGmoKDANDQ0BBxfXV1tpkyZYuLj401ERITp06ePycnJ8R+3bds243a7A0LBmFMvex0yZIjp27evOXjwoDHmVHx07tzZbNu2zWRkZBi3222uuOIKM3XqVHP48OGA2381Powx5osvvjBjxowxXbt2NZGRkaZ///7mN7/5jTlx4kTAcW+//bYZPHiwcTqdRlKL+/mq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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(data['age'])\n",
    "plt.title('Boxplot for Age')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d143f947-44d1-4e61-b9a8-eb253913bd6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "sb.distplot(data['age'])\n",
    "plt.title('age Distribution')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "88a5ba82-d124-45d3-a4ba-7c38e5c15f21",
   "metadata": {},
   "outputs": [],
   "source": [
    "#This line selects columns from the DataFrame df that have data types 'object' (typically string data) or 'category' (categorical data).\n",
    "cat_features = data.select_dtypes(include=['object','category'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ee88a291-1e3d-43a1-af7b-274da9428d09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1320 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         sex smoker     region\n",
       "0     female    yes  southwest\n",
       "1       male     no  southeast\n",
       "2       male     no  southeast\n",
       "3       male     no  northwest\n",
       "4       male     no  northwest\n",
       "...      ...    ...        ...\n",
       "1333    male     no  northwest\n",
       "1334  female     no  northeast\n",
       "1335  female     no  southeast\n",
       "1336  female     no  southwest\n",
       "1337  female    yes  northwest\n",
       "\n",
       "[1320 rows x 3 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cat_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "29aa17e4-adbd-46c3-a360-936822fc8bdd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjsAAAHFCAYAAAAUpjivAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA/rUlEQVR4nO3deXRV5d328esAyUkISSQEMkBMsAIVEkBAGawkMooCzthiESqlFYSaAuqDvtXgo6C0DDZafHQhYxEeW8EBpYBABBGFAGUsIIbpNTHIkASMISS/9w8X+/UQxhA4h833s9ZeK/ve977Pb587w5U9JB4zMwEAALhUNX8XAAAAcCkRdgAAgKsRdgAAgKsRdgAAgKsRdgAAgKsRdgAAgKsRdgAAgKsRdgAAgKsRdgAAgKsRdoArwMaNG/Wb3/xGDRs2VEhIiGrVqqVWrVpp3LhxOnTokL/LkyTNnj1bkyZNqvJxd+/eLY/Ho2nTpl3wvlu3blVGRoZ2795d5XV98sknatOmjcLCwuTxeDR//vwqf43KSEpK0oABA/xdBhBQavi7AABn9+abb2rIkCFq0qSJnnjiCTVt2lSlpaVau3atXn/9dX3++eeaN2+ev8vU7NmztXnzZqWnp/u7FMfWrVs1evRopaWlKSkpqcrGNTP16dNHjRs31vvvv6+wsDA1adKkysa/GPPmzVNERIS/ywACCmEHCGCff/65Bg8erK5du2r+/Pnyer3Otq5du2rEiBFauHChHyu8On3zzTc6dOiQ7rnnHnXu3PmC9y8tLZXH41GNGlX/LfjGG2+s8jGBKx2XsYAANmbMGHk8Hr3xxhs+Qeek4OBg9e7d21kvLy/XuHHj9POf/1xer1f16tXTww8/rP379/vsd6ZLHWlpaUpLS3PWly9fLo/Ho7ffflvPPPOM4uPjFRERoS5dumj79u0++y1YsEB79uyRx+NxlrNJSkpSz549NW/ePDVv3lwhISG67rrr9Ne//vW83puVK1eqc+fOCg8PV82aNdWhQwctWLDA2T5t2jQ98MADkqTbbrvNqelcl8PONW5GRoYaNGggSXrqqafk8XjOetbo5Hs4c+ZMjRgxQvXr15fX69VXX30lSVqyZIk6d+6siIgI1axZU7fccos++eSTCuO89957at68ubxer6677jq98sorysjIqPA+n25u9+7dq1//+teqV6+evF6vbrjhBo0fP17l5eVOn5OXC//yl79owoQJatiwoWrVqqX27dtr9erVZ33PgIBnAALSiRMnrGbNmta2bdvz3ud3v/udSbKhQ4fawoUL7fXXX7e6detaQkKCHThwwOmXmJho/fv3r7B/amqqpaamOuvLli0zSZaUlGQPPfSQLViwwN5++2279tprrVGjRnbixAkzM9uyZYvdcsstFhsba59//rmznE1iYqLVr1/frr32Wnvrrbfso48+soceesgk2Z///GenX05OjkmyqVOnOm3Lly+3oKAga926tc2dO9fmz59v3bp1M4/HY3PmzDEzs/z8fBszZoxJstdee82pKT8//4w1nc+4+/bts3fffdck2bBhw+zzzz+3devWnXHMk+9h/fr17f7777f333/fPvzwQzt48KDNnDnTPB6P3X333fbuu+/aBx98YD179rTq1avbkiVLnDE+/vhjq1atmqWlpdm8efPsnXfesbZt21pSUpKd+m381LnNz8+3+vXrW926de3111+3hQsX2tChQ02SDR48uML7nJSUZLfffrvNnz/f5s+fbykpKVa7dm07cuTIWecTCGSEHSBA5eXlmST75S9/eV79t23bZpJsyJAhPu1ffPGFSbKnn37aabvQsHPHHXf49Pvf//1fk+QTaO68805LTEw8r1pP1uDxeGzDhg0+7V27drWIiAg7duyYmZ0+7LRr187q1atnRUVFTtuJEycsOTnZGjRoYOXl5WZm9s4775gkW7Zs2XnVdL7jnqzpp6HsTE6+hx07dvRpP3bsmEVFRVmvXr182svKyqxFixZ28803O2033XSTJSQkWElJidNWVFRkderUOWfY+a//+i+TZF988YVPv8GDB5vH47Ht27f7HFNKSooTYs3MvvzyS5Nkb7/99jmPFQhUXMYCXGLZsmWSVOESxs0336wbbrjhtJdGztdPL5VJUvPmzSVJe/bsqfSYktSsWTO1aNHCp61v374qLCzUunXrTrvPsWPH9MUXX+j+++9XrVq1nPbq1aurX79+2r9/v88ltvN1qcY96b777vNZX7VqlQ4dOqT+/fvrxIkTzlJeXq7bb79da9as0bFjx3Ts2DGtXbtWd999t4KDg539a9WqpV69ep3zdZcuXaqmTZvq5ptv9mkfMGCAzExLly71ab/zzjtVvXp1Z72q5hrwJ25QBgJUdHS0atasqZycnPPqf/DgQUlSXFxchW3x8fEX9cOqTp06Pusn7x8qLi6u9JiSFBsbe8a2k8dzqsOHD8vMznicZ9v3bC7VuCedOu63334rSbr//vvPuM+hQ4fk8XhkZoqJiamw/XRtpzp48OBp7yk60zFdqrkG/ImwAwSo6tWrq3Pnzvr444+1f/9+56bYMzn5Qyo3N7dC32+++UbR0dHOekhIiEpKSiqM8d133/n0u9Ty8vLO2HbqD92TateurWrVqik3N7fCtm+++UaSKnUMl2rck069kfjkWJmZmWrXrt1p94mJiXGe3DoZjn7qdO/fqerUqXPJjgm4UnAZCwhgo0aNkplp0KBBOn78eIXtpaWl+uCDDyRJnTp1kiTNmjXLp8+aNWu0bds2n0ekk5KStHHjRp9+O3bsuKjLNF6v94J/+9+yZYv+/e9/+7TNnj1b4eHhatWq1Wn3CQsLU9u2bfXuu+/6vF55eblmzZqlBg0aqHHjxk5N0vmdlbiQcavCLbfcomuuuUZbt25VmzZtTrsEBwcrLCxMbdq00fz5830+B44ePaoPP/zwnK/TuXNnbd26tcJlwRkzZsjj8ei2226rsmMCAhVndoAA1r59e02ePFlDhgxR69atNXjwYDVr1kylpaVav3693njjDSUnJ6tXr15q0qSJfve73ykzM1PVqlVTjx49tHv3bv3pT39SQkKC/vjHPzrj9uvXT7/+9a81ZMgQ3XfffdqzZ4/GjRununXrVrrWlJQUvfvuu5o8ebJat26tatWqqU2bNmfdJz4+Xr1791ZGRobi4uI0a9YsLV68WC+//LJq1qx5xv3Gjh2rrl276rbbbtPIkSMVHBysv/3tb9q8ebPefvtt5yxKcnKyJOmNN95QeHi4QkJC1LBhwzOeNTrfcatCrVq1lJmZqf79++vQoUO6//77Va9ePR04cED//ve/deDAAU2ePFmS9Pzzz+vOO+9U9+7d9fjjj6usrEx//vOfVatWrXP+Be0//vGPmjFjhu688049//zzSkxM1IIFC/S3v/1NgwcPrtIABwQsv94eDeC8bNiwwfr372/XXnutBQcHW1hYmN1444327LPP+jxKXVZWZi+//LI1btzYgoKCLDo62n7961/bvn37fMYrLy+3cePG2XXXXWchISHWpk0bW7p06RmfxnrnnXd89j/dE1KHDh2y+++/36655hrzeDwVnhI6VWJiot155532j3/8w5o1a2bBwcGWlJRkEyZMOOdrmZmtWLHCOnXqZGFhYRYaGmrt2rWzDz74oMLrTJo0yRo2bGjVq1c/7TinOp9xK/M01qnv4UlZWVl25513WlRUlAUFBVn9+vXtzjvvrNB/3rx5lpKSYsHBwXbttdfaSy+9ZH/4wx+sdu3aPv1O96Tdnj17rG/fvlanTh0LCgqyJk2a2J///GcrKys7r2OSZM8999w5jxUIVB4zM78lLQBXraSkJCUnJ5/XpRhUVFpaqpYtW6p+/fpatGiRv8sBAhqXsQDgCjBw4EB17dpVcXFxysvL0+uvv65t27bplVde8XdpQMAj7ADAFaCoqEgjR47UgQMHFBQUpFatWumjjz5Sly5d/F0aEPC4jAUAAFyNR88BAICrEXYAAICrEXYAAICrcYOyfvwLqd98843Cw8Or9I+GAQCAS8fMVFRUpPj4eFWrdubzN4Qd/fg/YhISEvxdBgAAqIR9+/ad9f8HEnYkhYeHS/rxzYqIiPBzNQAA4HwUFhYqISHB+Tl+JoQd/f//RhwREUHYAQDgCnOuW1C4QRkAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALgaYQcAALhaDX8XAFwJ9j6f4u8S8BPXPrvJ3yUAuIJwZgcAALgaYQcAALiaX8PO5MmT1bx5c0VERCgiIkLt27fXxx9/7GwfMGCAPB6Pz9KuXTufMUpKSjRs2DBFR0crLCxMvXv31v79+y/3oQAAgADl17DToEEDvfTSS1q7dq3Wrl2rTp066a677tKWLVucPrfffrtyc3Od5aOPPvIZIz09XfPmzdOcOXO0cuVKHT16VD179lRZWdnlPhwAABCA/HqDcq9evXzWX3zxRU2ePFmrV69Ws2bNJEler1exsbGn3b+goEBTpkzRzJkz1aVLF0nSrFmzlJCQoCVLlqh79+6X9gAAAEDAC5h7dsrKyjRnzhwdO3ZM7du3d9qXL1+uevXqqXHjxho0aJDy8/OdbdnZ2SotLVW3bt2ctvj4eCUnJ2vVqlWXtX4AABCY/P7o+aZNm9S+fXv98MMPqlWrlubNm6emTZtKknr06KEHHnhAiYmJysnJ0Z/+9Cd16tRJ2dnZ8nq9ysvLU3BwsGrXru0zZkxMjPLy8s74miUlJSopKXHWCwsLL83BAQAAv/N72GnSpIk2bNigI0eO6J///Kf69++vrKwsNW3aVA8++KDTLzk5WW3atFFiYqIWLFige++994xjmpk8Hs8Zt48dO1ajR4+u0uMAAACBye+XsYKDg3X99derTZs2Gjt2rFq0aKFXXnnltH3j4uKUmJionTt3SpJiY2N1/PhxHT582Kdffn6+YmJizviao0aNUkFBgbPs27ev6g4IAAAEFL+HnVOZmc8lpp86ePCg9u3bp7i4OElS69atFRQUpMWLFzt9cnNztXnzZnXo0OGMr+H1ep3H3U8uAADAnfx6Gevpp59Wjx49lJCQoKKiIs2ZM0fLly/XwoULdfToUWVkZOi+++5TXFycdu/eraefflrR0dG65557JEmRkZEaOHCgRowYoTp16igqKkojR45USkqK83QWAAC4uvk17Hz77bfq16+fcnNzFRkZqebNm2vhwoXq2rWriouLtWnTJs2YMUNHjhxRXFycbrvtNs2dO1fh4eHOGBMnTlSNGjXUp08fFRcXq3Pnzpo2bZqqV6/uxyMDAACBwmNm5u8i/K2wsFCRkZEqKCjgkhZOi38EGlj4R6AApPP/+R1w9+wAAABUJcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwNcIOAABwtRr+LuBK1fqJGf4uAT+R/eeH/V0CACBAcWYHAAC4Gmd2AOAUt2Te4u8S8BOfDfvM3yXgCseZHQAA4GqEHQAA4GpcxgIAXNWyOqb6uwT8ROqnWVU+Jmd2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAq/k17EyePFnNmzdXRESEIiIi1L59e3388cfOdjNTRkaG4uPjFRoaqrS0NG3ZssVnjJKSEg0bNkzR0dEKCwtT7969tX///st9KAAAIED5New0aNBAL730ktauXau1a9eqU6dOuuuuu5xAM27cOE2YMEGvvvqq1qxZo9jYWHXt2lVFRUXOGOnp6Zo3b57mzJmjlStX6ujRo+rZs6fKysr8dVgAACCA+DXs9OrVS3fccYcaN26sxo0b68UXX1StWrW0evVqmZkmTZqkZ555Rvfee6+Sk5M1ffp0ff/995o9e7YkqaCgQFOmTNH48ePVpUsX3XjjjZo1a5Y2bdqkJUuW+PPQAABAgAiYe3bKyso0Z84cHTt2TO3bt1dOTo7y8vLUrVs3p4/X61VqaqpWrVolScrOzlZpaalPn/j4eCUnJzt9AADA1a2GvwvYtGmT2rdvrx9++EG1atXSvHnz1LRpUyesxMTE+PSPiYnRnj17JEl5eXkKDg5W7dq1K/TJy8s742uWlJSopKTEWS8sLKyqwwEAAAHG72d2mjRpog0bNmj16tUaPHiw+vfvr61btzrbPR6PT38zq9B2qnP1GTt2rCIjI50lISHh4g4CAAAELL+HneDgYF1//fVq06aNxo4dqxYtWuiVV15RbGysJFU4Q5Ofn++c7YmNjdXx48d1+PDhM/Y5nVGjRqmgoMBZ9u3bV8VHBQAAAoXfw86pzEwlJSVq2LChYmNjtXjxYmfb8ePHlZWVpQ4dOkiSWrduraCgIJ8+ubm52rx5s9PndLxer/O4+8kFAAC4k1/v2Xn66afVo0cPJSQkqKioSHPmzNHy5cu1cOFCeTwepaena8yYMWrUqJEaNWqkMWPGqGbNmurbt68kKTIyUgMHDtSIESNUp04dRUVFaeTIkUpJSVGXLl38eWgAACBA+DXsfPvtt+rXr59yc3MVGRmp5s2ba+HCheratask6cknn1RxcbGGDBmiw4cPq23btlq0aJHCw8OdMSZOnKgaNWqoT58+Ki4uVufOnTVt2jRVr17dX4cFAAACiF/DzpQpU8663ePxKCMjQxkZGWfsExISoszMTGVmZlZxdQAAwA0C7p4dAACAqkTYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArkbYAQAArubXsDN27FjddNNNCg8PV7169XT33Xdr+/btPn0GDBggj8fjs7Rr186nT0lJiYYNG6bo6GiFhYWpd+/e2r9//+U8FAAAEKD8GnaysrL02GOPafXq1Vq8eLFOnDihbt266dixYz79br/9duXm5jrLRx995LM9PT1d8+bN05w5c7Ry5UodPXpUPXv2VFlZ2eU8HAAAEIBq+PPFFy5c6LM+depU1atXT9nZ2erYsaPT7vV6FRsbe9oxCgoKNGXKFM2cOVNdunSRJM2aNUsJCQlasmSJunfvfukOAAAABLyAumenoKBAkhQVFeXTvnz5ctWrV0+NGzfWoEGDlJ+f72zLzs5WaWmpunXr5rTFx8crOTlZq1atOu3rlJSUqLCw0GcBAADuFDBhx8w0fPhw/eIXv1BycrLT3qNHD/3973/X0qVLNX78eK1Zs0adOnVSSUmJJCkvL0/BwcGqXbu2z3gxMTHKy8s77WuNHTtWkZGRzpKQkHDpDgwAAPiVXy9j/dTQoUO1ceNGrVy50qf9wQcfdD5OTk5WmzZtlJiYqAULFujee+8943hmJo/Hc9pto0aN0vDhw531wsJCAg8AAC4VEGd2hg0bpvfff1/Lli1TgwYNzto3Li5OiYmJ2rlzpyQpNjZWx48f1+HDh3365efnKyYm5rRjeL1eRURE+CwAAMCd/Bp2zExDhw7Vu+++q6VLl6phw4bn3OfgwYPat2+f4uLiJEmtW7dWUFCQFi9e7PTJzc3V5s2b1aFDh0tWOwAAuDL49TLWY489ptmzZ+u9995TeHi4c49NZGSkQkNDdfToUWVkZOi+++5TXFycdu/eraefflrR0dG65557nL4DBw7UiBEjVKdOHUVFRWnkyJFKSUlxns4CAABXL7+GncmTJ0uS0tLSfNqnTp2qAQMGqHr16tq0aZNmzJihI0eOKC4uTrfddpvmzp2r8PBwp//EiRNVo0YN9enTR8XFxercubOmTZum6tWrX87DAQAAAcivYcfMzro9NDRU//rXv845TkhIiDIzM5WZmVlVpQEAAJcIiBuUAQAALhXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcDXCDgAAcLVKhZ1OnTrpyJEjFdoLCwvVqVOni60JAACgylQq7CxfvlzHjx+v0P7DDz9oxYoV5z3O2LFjddNNNyk8PFz16tXT3Xffre3bt/v0MTNlZGQoPj5eoaGhSktL05YtW3z6lJSUaNiwYYqOjlZYWJh69+6t/fv3V+bQAACAy1xQ2Nm4caM2btwoSdq6dauzvnHjRq1fv15TpkxR/fr1z3u8rKwsPfbYY1q9erUWL16sEydOqFu3bjp27JjTZ9y4cZowYYJeffVVrVmzRrGxseratauKioqcPunp6Zo3b57mzJmjlStX6ujRo+rZs6fKysou5PAAAIAL1biQzi1btpTH45HH4znt5arQ0FBlZmae93gLFy70WZ86darq1aun7OxsdezYUWamSZMm6ZlnntG9994rSZo+fbpiYmI0e/Zs/f73v1dBQYGmTJmimTNnqkuXLpKkWbNmKSEhQUuWLFH37t0v5BABAIDLXFDYycnJkZnpuuuu05dffqm6des624KDg1WvXj1Vr1690sUUFBRIkqKiopzXy8vLU7du3Zw+Xq9XqampWrVqlX7/+98rOztbpaWlPn3i4+OVnJysVatWnTbslJSUqKSkxFkvLCysdM0AACCwXVDYSUxMlCSVl5dXeSFmpuHDh+sXv/iFkpOTJUl5eXmSpJiYGJ++MTEx2rNnj9MnODhYtWvXrtDn5P6nGjt2rEaPHl3VhwAAAALQBYWdn9qxY4eWL1+u/Pz8CuHn2WefveDxhg4dqo0bN2rlypUVtnk8Hp91M6vQdqqz9Rk1apSGDx/urBcWFiohIeGCawYAAIGvUmHnzTff1ODBgxUdHa3Y2FifUOHxeC447AwbNkzvv/++Pv30UzVo0MBpj42NlfTj2Zu4uDinPT8/3znbExsbq+PHj+vw4cM+Z3fy8/PVoUOH076e1+uV1+u9oBoBAMCVqVKPnr/wwgt68cUXlZeXpw0bNmj9+vXOsm7duvMex8w0dOhQvfvuu1q6dKkaNmzos71hw4aKjY3V4sWLnbbjx48rKyvLCTKtW7dWUFCQT5/c3Fxt3rz5jGEHAABcPSp1Zufw4cN64IEHLvrFH3vsMc2ePVvvvfeewsPDnXtsIiMjFRoaKo/Ho/T0dI0ZM0aNGjVSo0aNNGbMGNWsWVN9+/Z1+g4cOFAjRoxQnTp1FBUVpZEjRyolJcV5OgsAAFy9KhV2HnjgAS1atEiPPvroRb345MmTJUlpaWk+7VOnTtWAAQMkSU8++aSKi4s1ZMgQHT58WG3bttWiRYsUHh7u9J84caJq1KihPn36qLi4WJ07d9a0adMu6skwAADgDpUKO9dff73+9Kc/afXq1UpJSVFQUJDP9j/84Q/nNY6ZnbOPx+NRRkaGMjIyztgnJCREmZmZF/Q3fgAAwNWhUmHnjTfeUK1atZSVlaWsrCyfbR6P57zDDgAAwKVWqbCTk5NT1XUAAABcEpV6GgsAAOBKUakzO4888shZt7/11luVKgYAAKCqVfrR858qLS3V5s2bdeTIkdP+g1AAAAB/qVTYmTdvXoW28vJyDRkyRNddd91FFwUAAFBVquyenWrVqumPf/yjJk6cWFVDAgAAXLQqvUF5165dOnHiRFUOCQAAcFEqdRnrp/8xXPrxjwPm5uZqwYIF6t+/f5UUBgAAUBUqFXbWr1/vs16tWjXVrVtX48ePP+eTWgAAAJdTpcLOsmXLqroOAACAS6JSYeekAwcOaPv27fJ4PGrcuLHq1q1bVXUBAABUiUrdoHzs2DE98sgjiouLU8eOHXXrrbcqPj5eAwcO1Pfff1/VNQIAAFRapcLO8OHDlZWVpQ8++EBHjhzRkSNH9N577ykrK0sjRoyo6hoBAAAqrVKXsf75z3/qH//4h9LS0py2O+64Q6GhoerTp48mT55cVfUBAABclEqd2fn+++8VExNTob1evXpcxgIAAAGlUmGnffv2eu655/TDDz84bcXFxRo9erTat29fZcUBAABcrEpdxpo0aZJ69OihBg0aqEWLFvJ4PNqwYYO8Xq8WLVpU1TUCAABUWqXCTkpKinbu3KlZs2bpP//5j8xMv/zlL/XQQw8pNDS0qmsEAACotEqFnbFjxyomJkaDBg3yaX/rrbd04MABPfXUU1VSHAAAwMWq1D07//M//6Of//znFdqbNWum119//aKLAgAAqCqVCjt5eXmKi4ur0F63bl3l5uZedFEAAABVpVJhJyEhQZ999lmF9s8++0zx8fEXXRQAAEBVqdQ9O7/97W+Vnp6u0tJSderUSZL0ySef6Mknn+QvKAMAgIBSqbDz5JNP6tChQxoyZIiOHz8uSQoJCdFTTz2lUaNGVWmBAAAAF6NSYcfj8ejll1/Wn/70J23btk2hoaFq1KiRvF5vVdcHAABwUSoVdk6qVauWbrrppqqqBQAAoMpV6gZlAACAKwVhBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuBphBwAAuJpfw86nn36qXr16KT4+Xh6PR/Pnz/fZPmDAAHk8Hp+lXbt2Pn1KSko0bNgwRUdHKywsTL1799b+/fsv41EAAIBA5tewc+zYMbVo0UKvvvrqGfvcfvvtys3NdZaPPvrIZ3t6errmzZunOXPmaOXKlTp69Kh69uypsrKyS10+AAC4AlzUfz2/WD169FCPHj3O2sfr9So2Nva02woKCjRlyhTNnDlTXbp0kSTNmjVLCQkJWrJkibp3717lNQMAgCtLwN+zs3z5ctWrV0+NGzfWoEGDlJ+f72zLzs5WaWmpunXr5rTFx8crOTlZq1atOuOYJSUlKiws9FkAAIA7BXTY6dGjh/7+979r6dKlGj9+vNasWaNOnTqppKREkpSXl6fg4GDVrl3bZ7+YmBjl5eWdcdyxY8cqMjLSWRISEi7pcQAAAP/x62Wsc3nwwQedj5OTk9WmTRslJiZqwYIFuvfee8+4n5nJ4/GccfuoUaM0fPhwZ72wsJDAAwCASwX0mZ1TxcXFKTExUTt37pQkxcbG6vjx4zp8+LBPv/z8fMXExJxxHK/Xq4iICJ8FAAC40xUVdg4ePKh9+/YpLi5OktS6dWsFBQVp8eLFTp/c3Fxt3rxZHTp08FeZAAAggPj1MtbRo0f11VdfOes5OTnasGGDoqKiFBUVpYyMDN13332Ki4vT7t279fTTTys6Olr33HOPJCkyMlIDBw7UiBEjVKdOHUVFRWnkyJFKSUlxns4CAABXN7+GnbVr1+q2225z1k/eR9O/f39NnjxZmzZt0owZM3TkyBHFxcXptttu09y5cxUeHu7sM3HiRNWoUUN9+vRRcXGxOnfurGnTpql69eqX/XgAAEDg8WvYSUtLk5mdcfu//vWvc44REhKizMxMZWZmVmVpAADAJa6oe3YAAAAuFGEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4ml/DzqeffqpevXopPj5eHo9H8+fP99luZsrIyFB8fLxCQ0OVlpamLVu2+PQpKSnRsGHDFB0drbCwMPXu3Vv79++/jEcBAAACmV/DzrFjx9SiRQu9+uqrp90+btw4TZgwQa+++qrWrFmj2NhYde3aVUVFRU6f9PR0zZs3T3PmzNHKlSt19OhR9ezZU2VlZZfrMAAAQACr4c8X79Gjh3r06HHabWamSZMm6ZlnntG9994rSZo+fbpiYmI0e/Zs/f73v1dBQYGmTJmimTNnqkuXLpKkWbNmKSEhQUuWLFH37t0v27EAAIDAFLD37OTk5CgvL0/dunVz2rxer1JTU7Vq1SpJUnZ2tkpLS336xMfHKzk52elzOiUlJSosLPRZAACAOwVs2MnLy5MkxcTE+LTHxMQ42/Ly8hQcHKzatWufsc/pjB07VpGRkc6SkJBQxdUDAIBAEbBh5ySPx+OzbmYV2k51rj6jRo1SQUGBs+zbt69KagUAAIEnYMNObGysJFU4Q5Ofn++c7YmNjdXx48d1+PDhM/Y5Ha/Xq4iICJ8FAAC4U8CGnYYNGyo2NlaLFy922o4fP66srCx16NBBktS6dWsFBQX59MnNzdXmzZudPgAA4Orm16exjh49qq+++spZz8nJ0YYNGxQVFaVrr71W6enpGjNmjBo1aqRGjRppzJgxqlmzpvr27StJioyM1MCBAzVixAjVqVNHUVFRGjlypFJSUpynswAAwNXNr2Fn7dq1uu2225z14cOHS5L69++vadOm6cknn1RxcbGGDBmiw4cPq23btlq0aJHCw8OdfSZOnKgaNWqoT58+Ki4uVufOnTVt2jRVr179sh8PAAAIPH4NO2lpaTKzM273eDzKyMhQRkbGGfuEhIQoMzNTmZmZl6BCAABwpQvYe3YAAACqAmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4GmEHAAC4WkCHnYyMDHk8Hp8lNjbW2W5mysjIUHx8vEJDQ5WWlqYtW7b4sWIAABBoAjrsSFKzZs2Um5vrLJs2bXK2jRs3ThMmTNCrr76qNWvWKDY2Vl27dlVRUZEfKwYAAIEk4MNOjRo1FBsb6yx169aV9ONZnUmTJumZZ57Rvffeq+TkZE2fPl3ff/+9Zs+e7eeqAQBAoAj4sLNz507Fx8erYcOG+uUvf6mvv/5akpSTk6O8vDx169bN6ev1epWamqpVq1b5q1wAABBgavi7gLNp27atZsyYocaNG+vbb7/VCy+8oA4dOmjLli3Ky8uTJMXExPjsExMToz179px13JKSEpWUlDjrhYWFVV88AAAICAEddnr06OF8nJKSovbt2+tnP/uZpk+frnbt2kmSPB6Pzz5mVqHtVGPHjtXo0aOrvmAAABBwAv4y1k+FhYUpJSVFO3fudJ7KOnmG56T8/PwKZ3tONWrUKBUUFDjLvn37LlnNAADAv66osFNSUqJt27YpLi5ODRs2VGxsrBYvXuxsP378uLKystShQ4ezjuP1ehUREeGzAAAAdwroy1gjR45Ur169dO211yo/P18vvPCCCgsL1b9/f3k8HqWnp2vMmDFq1KiRGjVqpDFjxqhmzZrq27evv0sHAAABIqDDzv79+/WrX/1K3333nerWrat27dpp9erVSkxMlCQ9+eSTKi4u1pAhQ3T48GG1bdtWixYtUnh4uJ8rBwAAgSKgw86cOXPOut3j8SgjI0MZGRmXpyAAAHDFuaLu2QEAALhQhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqhB0AAOBqrgk7f/vb39SwYUOFhISodevWWrFihb9LAgAAAcAVYWfu3LlKT0/XM888o/Xr1+vWW29Vjx49tHfvXn+XBgAA/MwVYWfChAkaOHCgfvvb3+qGG27QpEmTlJCQoMmTJ/u7NAAA4GdXfNg5fvy4srOz1a1bN5/2bt26adWqVX6qCgAABIoa/i7gYn333XcqKytTTEyMT3tMTIzy8vJOu09JSYlKSkqc9YKCAklSYWHheb9uWUlxJarFpXIhc1cZRT+UXdLxcWEu9XyfKD5xScfHhbnU833sBPMdSC5kvk/2NbOz9rviw85JHo/HZ93MKrSdNHbsWI0ePbpCe0JCwiWpDZdeZOaj/i4Bl9PYSH9XgMso8inm+6oSeeHzXVRUpMiz7HfFh53o6GhVr169wlmc/Pz8Cmd7Tho1apSGDx/urJeXl+vQoUOqU6fOGQOSGxUWFiohIUH79u1TRESEv8vBJcZ8X12Y76vL1TrfZqaioiLFx8eftd8VH3aCg4PVunVrLV68WPfcc4/TvnjxYt11112n3cfr9crr9fq0XXPNNZeyzIAWERFxVX1xXO2Y76sL8311uRrn+2xndE664sOOJA0fPlz9+vVTmzZt1L59e73xxhvau3evHn2USxsAAFztXBF2HnzwQR08eFDPP/+8cnNzlZycrI8++kiJiYn+Lg0AAPiZK8KOJA0ZMkRDhgzxdxlXFK/Xq+eee67CJT24E/N9dWG+ry7M99l57FzPawEAAFzBrvg/KggAAHA2hB0AAOBqhB0AAOBqhJ2rSFJSkiZNmuTvMnAZMefut3z5cnk8Hh05csTfpeAyYt4vDGHHhaZNmxbwfyRx9+7d8ng82rBhg79LcYVAnnMCV9VJS0tTenq6v8s4q4yMDLVs2dLfZbhKoM77lRS4CDsAEOBKS0v9XQL8gHmvQga/eOeddyw5OdlCQkIsKirKOnfubEePHrWysjIbPXq01a9f34KDg61Fixb28ccfO/stW7bMJNnhw4edtvXr15sky8nJcbb/dHnuuefMzCwxMdFefPFF+81vfmO1atWyhIQE+5//+R9nnHvvvdeGDh3qrD/++OMmyTZv3mxmZqWlpVarVi1buHChmZmVl5fbyy+/bA0bNrSQkBBr3ry5vfPOO87+hw4dsr59+1p0dLSFhITY9ddfb2+99ZaZWYUaU1NTq/otDjiBOOdmZvv377c+ffrYNddcY1FRUda7d2/Lyclxtn/55ZfWpUsXq1OnjkVERFjHjh0tOzvbZ4znnnvOEhISLDg42OLi4mzYsGFmZpaamlqhtqtBamqqDRs2zJ544gmrXbu2xcTEOHNiZrZnzx7r3bu3hYWFWXh4uD3wwAOWl5fnbH/uueesRYsWNmXKFGvYsKF5PB57+OGHK7yXP53/JUuWWOvWrS00NNTat29v//nPf8zM7MiRI1atWjVbu3atmf34dVu7dm1r06aN83qzZ8+22NhYZ/1cnxPLli2zm266yWrWrGmRkZHWoUMH2717t02dOrVCjVOnTr00b3IACqR5P+n999+3Vq1amdfrtYYNG1pGRoaVlpY628ePH2/JyclWs2ZNa9CggQ0ePNiKioqc7bt377aePXvaNddcYzVr1rSmTZvaggULLCcnp0Jd/fv3v2Tv7cW6Or7zBJhvvvnGatSoYRMmTLCcnBzbuHGjvfbaa1ZUVGQTJkywiIgIe/vtt+0///mPPfnkkxYUFGQ7duwws3P/4CspKbFJkyZZRESE5ebmWm5urvOJm5iYaFFRUfbaa6/Zzp07bezYsVatWjXbtm2bmZn99a9/teTkZGfcli1bWnR0tL322mtmZrZq1SqrUaOGM97TTz9tP//5z23hwoW2a9cumzp1qnm9Xlu+fLmZmT322GPWsmVLW7NmjeXk5NjixYvt/fffN7Mff4Ce/ELNzc21gwcPXto33c8Cdc6PHTtmjRo1skceecQ2btxoW7dutb59+1qTJk2spKTEzMw++eQTmzlzpm3dutW2bt1qAwcOtJiYGCssLDSzH0NcRESEffTRR7Znzx774osv7I033jAzs4MHD1qDBg3s+eefd2q7GqSmplpERIRlZGTYjh07bPr06ebxeGzRokVWXl5uN954o/3iF7+wtWvX2urVq61Vq1Y+gf+5556zsLAw6969u61bt87+/e9/25EjR6x9+/Y2aNAg5708ceKE8/nRtm1bW758uW3ZssVuvfVW69ChgzNeq1at7C9/+YuZmW3YsMFq165twcHBVlBQYGZmv/vd7+zBBx80s3N/TpSWllpkZKSNHDnSvvrqK9u6datNmzbN9uzZY99//72NGDHCmjVr5tT4/fffX7433s8Cbd4XLlxoERERNm3aNNu1a5ctWrTIkpKSLCMjw+kzceJEW7p0qX399df2ySefWJMmTWzw4MHO9jvvvNO6du1qGzdutF27dtkHH3xgWVlZduLECfvnP/9pkmz79u2Wm5trR44cuSzvc2UQdvwgOzvbJNnu3bsrbIuPj7cXX3zRp+2mm26yIUOGmNm5f/CZmU2dOtUiIyMrjJ2YmGi//vWvnfXy8nKrV6+eTZ482czMNm7caB6Pxw4cOGCHDh2yoKAge+GFF+yBBx4wM7MxY8ZY27Ztzczs6NGjFhISYqtWrfJ5jYEDB9qvfvUrMzPr1auX/eY3vznte3Dyt4L169ef4V1yl0Cd8ylTpliTJk2svLzc6VNSUmKhoaH2r3/967THcuLECQsPD7cPPvjAzH78zbBx48Z2/Pjx0/ZPTEy0iRMnnnabW6WmptovfvELn7abbrrJnnrqKVu0aJFVr17d9u7d62zbsmWLSbIvv/zSzH78oRcUFGT5+fkVxn388cd92n76G/5JCxYsMElWXFxsZmbDhw+3nj17mpnZpEmT7P7777dWrVrZggULzMyscePG5/05cfDgQZPk/FJzqpNnJ65GgTbvt956q40ZM8Znv5kzZ1pcXNwZj+F///d/rU6dOs56SkqKTzg6XQ0//d4UqLhnxw9atGihzp07KyUlRQ888IDefPNNHT58WIWFhfrmm290yy23+PS/5ZZbtG3btip57ebNmzsfezwexcbGKj8/X5KUnJysOnXqKCsrSytWrFCLFi3Uu3dvZWVlSfrxZrTU1FRJ0tatW/XDDz+oa9euqlWrlrPMmDFDu3btkiQNHjxYc+bMUcuWLfXkk09q1apVVXIMV6JAnfPs7Gx99dVXCg8Pd+YwKipKP/zwgzOP+fn5evTRR9W4cWNFRkYqMjJSR48e1d69eyVJDzzwgIqLi3Xddddp0KBBmjdvnk6cOFEltV/Jfvq+S1JcXJzy8/O1bds2JSQkKCEhwdnWtGlTXXPNNT5znpiYqLp161bq9eLi4iTJmee0tDStWLFC5eXlysrKUlpamtLS0pSVlaW8vDzt2LHD+do+1+dEVFSUBgwYoO7du6tXr1565ZVXlJube+FvkEsF0rxnZ2fr+eef9/kePWjQIOXm5ur777+XJC1btkxdu3ZV/fr1FR4erocfflgHDx7UsWPHJEl/+MMf9MILL+iWW27Rc889p40bN17gOxIYCDt+UL16dS1evFgff/yxmjZtqszMTDVp0kQ5OTmSfvyB9FNm5rRVq1bNaTvpQm5iCwoK8ln3eDwqLy93Pu7YsaOWL1/ufENMTk5WWVmZNm3apFWrViktLU2SnH0WLFigDRs2OMvWrVv1j3/8Q5LUo0cP7dmzR+np6frmm2/UuXNnjRw58rxrdZNAnfPy8nK1bt3aZw43bNigHTt2qG/fvpKkAQMGKDs7W5MmTdKqVau0YcMG1alTR8ePH5ckJSQkaPv27XrttdcUGhqqIUOGqGPHjlf9zZVnet9/Orc/dWp7WFhYpV/v5Dgn57ljx44qKirSunXrtGLFCqWlpSk1NVVZWVlatmyZ6tWrpxtuuMHZ51yfE1OnTtXnn3+uDh06aO7cuWrcuLFWr159QfW6VSDNe3l5uUaPHu0zj5s2bdLOnTsVEhKiPXv26I477lBycrL++c9/Kjs7W6+99pqk//895re//a2+/vpr9evXT5s2bVKbNm2UmZl5QTUGAsKOn3g8Ht1yyy0aPXq01q9fr+DgYH3yySeKj4/XypUrffquWrXK+UZ0MvH/9DepUx/fDg4OVllZWaXqSktL0/Lly7V8+XKlpaXJ4/Ho1ltv1V/+8hcVFxc7ZyCaNm0qr9ervXv36vrrr/dZfvqbS926dTVgwADNmjVLkyZN0htvvOHUKKnSdV6JAnHOW7VqpZ07d6pevXoV5jEyMlKStGLFCv3hD3/QHXfcoWbNmsnr9eq7777zGSc0NFS9e/fWX//6Vy1fvlyff/65Nm3adFG1uVXTpk21d+9e7du3z2nbunWrCgoKnDk/k8q+l5GRkWrZsqVeffVVeTweNW3aVLfeeqvWr1+vDz/80DmrI53f54Qk3XjjjRo1apRWrVql5ORkzZ49+6JqdDt/zHurVq20ffv2CvN4/fXXq1q1alq7dq1OnDih8ePHq127dmrcuLG++eabCuMkJCTo0Ucf1bvvvqsRI0bozTffdOqSrozv44QdP/jiiy80ZswYrV27Vnv37tW7776rAwcO6IYbbtATTzyhl19+WXPnztX27dv1X//1X9qwYYMef/xxSXLCREZGhnbs2KEFCxZo/PjxPuMnJSXp6NGj+uSTT/Tdd985pyvPR1pamrZs2aJNmzbp1ltvddr+/ve/q1WrVoqIiJAkhYeHa+TIkfrjH/+o6dOna9euXVq/fr1ee+01TZ8+XZL07LPP6r333tNXX32lLVu26MMPP3S+qOvVq6fQ0FAtXLhQ3377rQoKCi76fQ1kgTrnDz30kKKjo3XXXXdpxYoVysnJUVZWlh5//HHt37/fef2ZM2dq27Zt+uKLL/TQQw8pNDTUGWPatGmaMmWKNm/erK+//lozZ85UaGioEhMTndo+/fRT/d//+38rhKSrUZcuXdS8eXM99NBDWrdunb788ks9/PDDSk1NVZs2bc66b1JSkr744gvt3r1b3333nfMb/PlIS0vTrFmzlJqaKo/Ho9q1a6tp06aaO3euc8ZWOvfnRE5OjkaNGqXPP/9ce/bs0aJFi7Rjxw7nazspKUk5OTnasGGDvvvuO5WUlFTqfXIbf8z7s88+qxkzZigjI0NbtmzRtm3bNHfuXP2f//N/JEk/+9nPdOLECWVmZjpfu6+//rrPGOnp6frXv/6lnJwcrVu3TkuXLnXmOjExUR6PRx9++KEOHDigo0ePVuKduUz8d7vQ1Wvr1q3WvXt3q1u3rnm9XmvcuLFlZmaamfk8hhwUFFThMWQzs5UrV1pKSoqFhITYrbfeau+8847PzapmZo8++qjVqVOnwmPIp94o2qJFC59HI8vLy61u3bo+j6WevBl25MiRPvuWl5fbK6+8Yk2aNLGgoCCrW7eude/e3bKysszM7L//+7/thhtusNDQUIuKirK77rrLvv76a2f/N9980xISEqxatWquf/Q8kOc8NzfXHn74YYuOjjav12vXXXedDRo0yHlSZ926ddamTRvzer3WqFEje+edd3zGnTdvnrVt29YiIiIsLCzM2rVr53PT5Oeff27Nmzc3r9d7VT16fuoNpXfddZfzaO75PoJ8qu3bt1u7du0sNDS0wiPIZ7uB3czsgw8+MEn26quvOm2n/nmJk872OZGXl2d33323xcXFWXBwsCUmJtqzzz5rZWVlZmb2ww8/2H333WfXXHPNVfnoeaDN+8KFC61Dhw4WGhpqERERdvPNNztPS5qZTZgwweLi4iw0NNS6d+9uM2bM8Bl36NCh9rOf/cy8Xq/VrVvX+vXrZ999952z//PPP2+xsbHm8XgC+tFzj9lPbgQAAABwGS5jAQAAVyPsAAAAVyPsAAAAVyPsAAAAVyPsAAAAVyPsAAAAVyPsAAAAVyPsALgqJCUladKkSf4uA4Af8EcFAVwVDhw4oLCwMNWsWdPfpQC4zAg7AALa8ePHnX84CACVwWUsAAElLS1NQ4cO1fDhwxUdHa2uXbtq69atuuOOO1SrVi3FxMSoX79+Pv9UtKioSA899JDCwsIUFxeniRMnKi0tTenp6U6fUy9j7d27V3fddZdq1aqliIgI9enTR99++62zPSMjQy1bttTMmTOVlJSkyMhI/fKXv1RRUdHleBsAVCHCDoCAM336dNWoUUOfffaZXnrpJaWmpqply5Zau3atFi5cqG+//VZ9+vRx+g8fPlyfffaZ3n//fS1evFgrVqzQunXrzji+menuu+/WoUOHlJWVpcWLF2vXrl168MEHffrt2rVL8+fP14cffqgPP/xQWVlZeumlly7ZcQO4NGr4uwAAONX111+vcePGSZKeffZZtWrVSmPGjHG2v/XWW0pISNCOHTsUFxen6dOna/bs2ercubMkaerUqYqPjz/j+EuWLNHGjRuVk5OjhIQESdLMmTPVrFkzrVmzRjfddJMkqby8XNOmTVN4eLgkqV+/fvrkk0/04osvXpLjBnBpEHYABJw2bdo4H2dnZ2vZsmWqVatWhX67du1ScXGxSktLdfPNNzvtkZGRatKkyRnH37ZtmxISEpygI0lNmzbVNddco23btjlhJykpyQk6khQXF6f8/PyLOjYAlx9hB0DACQsLcz4uLy9Xr1699PLLL1foFxcXp507d0qSPB6Pz7azPXthZhX6n649KCjIZ7vH41F5efn5HQSAgME9OwACWqtWrbRlyxYlJSXp+uuv91nCwsL0s5/9TEFBQfryyy+dfQoLC50QdDpNmzbV3r17tW/fPqdt69atKigo0A033HBJjwfA5UfYARDQHnvsMR06dEi/+tWv9OWXX+rrr7/WokWL9Mgjj6isrEzh4eHq37+/nnjiCS1btkxbtmzRI488omrVqp327I0kdenSRc2bN9dDDz2kdevW6csvv9TDDz+s1NRUn0toANyBsAMgoMXHx+uzzz5TWVmZunfvruTkZD3++OOKjIxUtWo/fgubMGGC2rdvr549e6pLly665ZZbdMMNNygkJOS0Y3o8Hs2fP1+1a9dWx44d1aVLF1133XWaO3fu5Tw0AJcJf1QQgOscO3ZM9evX1/jx4zVw4EB/lwPAz7hBGcAVb/369frPf/6jm2++WQUFBXr++eclSXfddZefKwMQCAg7AFzhL3/5i7Zv367g4GC1bt1aK1asUHR0tL/LAhAAuIwFAABcjRuUAQCAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAqxF2AACAq/0/metBweY4NYEAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in cat_features:\n",
    "    sb.countplot(x=col, data=data) #sb.countplot(x='age', data=data)\n",
    "    plt.title(f'Count plot of {col}')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "e84af3a3-364e-4907-8420-672c44dd91dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "region\n",
       "southeast    358\n",
       "southwest    323\n",
       "northwest    321\n",
       "northeast    318\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "40cef2bb-fcfe-411c-b6ad-c90f967b21a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''This line imports the LabelEncoder class from the sklearn.preprocessing module.\n",
    "LabelEncoder is used to convert categorical labels into numerical values.\n",
    "\n",
    "'''\n",
    "from sklearn.preprocessing import LabelEncoder "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "4e5b0adc-a3da-4d68-b82a-e203b4389c73",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''This line initializes an instance of the LabelEncoder class, \n",
    "which will be used to transform categorical labels into numerical values.\n",
    "\n",
    "'''\n",
    "\n",
    "le = LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "ebb9f4eb-d3e4-4c2e-8a74-449184d4a1ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1320 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         sex smoker     region\n",
       "0     female    yes  southwest\n",
       "1       male     no  southeast\n",
       "2       male     no  southeast\n",
       "3       male     no  northwest\n",
       "4       male     no  northwest\n",
       "...      ...    ...        ...\n",
       "1333    male     no  northwest\n",
       "1334  female     no  northeast\n",
       "1335  female     no  southeast\n",
       "1336  female     no  southwest\n",
       "1337  female    yes  northwest\n",
       "\n",
       "[1320 rows x 3 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cat_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "bd2af530-cc65-414b-a0c2-33f31d33ebcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "for column in cat_features.columns:\n",
    "    data[column] = le.fit_transform(data[column])   #data['gender'] = le.fit_transform(data['sex'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ae8dd503-81c2-49c4-a139-16cae7080b80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>16884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  sex  bmi  children  smoker  region  charges\n",
       "0   19    0   27         0       1       3    16884\n",
       "1   18    1   33         1       0       2     1725\n",
       "2   28    1   33         3       0       2     4449\n",
       "3   33    1   22         0       0       1    21984\n",
       "4   32    1   28         0       0       1     3866"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "bdf6b598-2019-4eab-816d-1c4957ba40df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "sex\n",
       "1    669\n",
       "0    651\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['sex'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "fd8a84bd-44ec-4bfe-b311-4014c303780a",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data[['age']] #Feature\n",
    "y = data['charges']    #Label/target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "fdf02f3c-17ef-488d-92b9-ee6ff70fcd42",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''This block of code splits your dataset into training and testing sets using train_test_split() from scikit-learn.\n",
    "X is the feature data, and y is the target variable.\n",
    "test_size=0.3 specifies that 30% of the data will be used for testing, and 70% will be used for training.\n",
    "random_state=0 ensures reproducibility by fixing the random seed.\n",
    "\n",
    "'''\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "432025b6-99c2-443b-a43d-468297fa1f21",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LinearRegression()\n"
     ]
    }
   ],
   "source": [
    "#This line imports the LinearRegression class from scikit-learn.\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "#This line creates an instance of the LinearRegression model and fits it to the training data (X_train and y_train) using the fit() method.\n",
    "#The model learns the coefficients (weights) for the linear regression equation that best fits the training data.\n",
    "\n",
    "model = LinearRegression().fit(X_train, y_train)\n",
    "print (model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "068b43d3-9fbb-4b05-98e6-556f10fd9e12",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([252.68555439])"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#This line retrieves the coefficients (slopes) of the linear regression model.\n",
    "\n",
    "model.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "e0582a33-351f-4dba-9ee6-62debb73a8ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3134.373921341343"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#This line retrieves the intercept of the linear regression model.\n",
    "\n",
    "model.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "760691b0-1554-49e8-9b95-fd7f69c04d09",
   "metadata": {},
   "outputs": [],
   "source": [
    "Regression formular y = 252.68555439 + 3134.373921341343\n",
    "\n",
    "Y= B0 + B1 X.\n",
    "\n",
    "In the regression formula, y represents the predicted salary, X represents the years of experience, 252.68555439  is the intercept term, and 3134.373921341343is the coefficient for the years of experience.\n",
    "\n",
    "This formula can be used to predict salaries based on years of experience using the trained linear regression model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "0fb77fa3-43cf-47a2-8504-c7ebc9c02db6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSE: 152489674.7323437\n",
      "RMSE: 12348.670970284362\n",
      "R2: 0.06816311731226055\n"
     ]
    }
   ],
   "source": [
    "#evaluating the performance of your linear regression model using various regression metrics\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "predictions = model.predict(X_test)\n",
    "\n",
    "mse = mean_squared_error(y_test, predictions)\n",
    "print(\"MSE:\", mse)\n",
    "\n",
    "rmse = np.sqrt(mse)\n",
    "print(\"RMSE:\", rmse)\n",
    "\n",
    "r2 = r2_score(y_test, predictions)\n",
    "print(\"R2:\", r2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "31508d24-1f62-4b32-9e1d-712904a56d5b",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data[['region','age','sex']]\n",
    "y = data['charges']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "44ca3d80-f761-4b68-91d0-5eeb8e804c1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       16884\n",
       "1        1725\n",
       "2        4449\n",
       "3       21984\n",
       "4        3866\n",
       "        ...  \n",
       "1333    10600\n",
       "1334     2205\n",
       "1335     1629\n",
       "1336     2007\n",
       "1337    29141\n",
       "Name: charges, Length: 1320, dtype: int32"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "eff0ab36-2a10-4a05-a518-9b5572e3e44e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>1</td>\n",
       "      <td>61</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1320 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      region  age  sex\n",
       "0          3   19    0\n",
       "1          2   18    1\n",
       "2          2   28    1\n",
       "3          1   33    1\n",
       "4          1   32    1\n",
       "...      ...  ...  ...\n",
       "1333       1   50    1\n",
       "1334       0   18    0\n",
       "1335       2   18    0\n",
       "1336       3   21    0\n",
       "1337       1   61    0\n",
       "\n",
       "[1320 rows x 3 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c61c8792-2397-4a88-baa5-f439c1239571",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Split the dataset \n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "7468ccf9-3faf-4ea4-9eb7-c3ddef208237",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LinearRegression()\n"
     ]
    }
   ],
   "source": [
    "# Fit a linear regression model on the training set\n",
    "model = LinearRegression().fit(X_train, y_train)\n",
    "print (model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ecf1492d-2773-4b0c-b8c6-3496bf646f7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2469.337163392245"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "39629248-074e-40a8-8f51-8cf74f0ee365",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-304.8821027 ,  254.31595299, 2220.0479556 ])"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "904e382c-db8c-4e69-9cfb-8582adfa76f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSE: 154122152.38513398\n",
      "RMSE: 12414.594330268468\n",
      "R2: 0.06\n"
     ]
    }
   ],
   "source": [
    "predictions = model.predict(X_test)\n",
    "\n",
    "mse = mean_squared_error(y_test, predictions)\n",
    "print(\"MSE:\", mse)\n",
    "\n",
    "rmse = np.sqrt(mse)\n",
    "print(\"RMSE:\", rmse)\n",
    "\n",
    "r2 = r2_score(y_test, predictions)\n",
    "print(\"R2:\", round(r2,2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f5c1b129-11f7-46ea-9a4a-8f85559d2207",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10023399160382751"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_train, model.predict(X_train))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "881a8104-cbde-4e8c-809c-ca9545940cb5",
   "metadata": {},
   "source": [
    "DECISION TREE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "55ff9147-499d-4e9d-9127-60a630d5d885",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DecisionTreeRegressor() \n",
      "\n",
      "|--- feature_1 <= 42.50\n",
      "|   |--- feature_1 <= 26.50\n",
      "|   |   |--- feature_1 <= 25.50\n",
      "|   |   |   |--- feature_1 <= 21.50\n",
      "|   |   |   |   |--- feature_1 <= 20.50\n",
      "|   |   |   |   |   |--- feature_1 <= 18.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 1.00\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [5272.38]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [9935.35]\n",
      "|   |   |   |   |   |   |--- feature_0 >  1.00\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [8687.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [5758.83]\n",
      "|   |   |   |   |   |--- feature_1 >  18.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [2458.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10585.25]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 19.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [10748.06]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9622.73]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  19.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6409.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [14789.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [34439.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [36135.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10004.60]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10560.33]\n",
      "|   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [7203.60]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [7188.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8804.64]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  19.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [14630.00]\n",
      "|   |   |   |   |--- feature_1 >  20.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [7037.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [10667.00]\n",
      "|   |   |   |   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2408.67]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2302.25]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2836.50]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2202.25]\n",
      "|   |   |   |   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [5291.75]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [7190.33]\n",
      "|   |   |   |--- feature_1 >  21.50\n",
      "|   |   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 22.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [3038.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2836.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  22.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [26177.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [6887.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [13660.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [26294.25]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8099.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [7999.50]\n",
      "|   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 22.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13576.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  22.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9903.75]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 22.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [2345.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  22.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9053.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [3291.25]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [3601.33]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [6166.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [6437.75]\n",
      "|   |   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 22.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13302.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [24497.60]\n",
      "|   |   |   |   |   |   |--- feature_1 >  22.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19283.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [8124.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [1978.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14031.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8227.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21219.25]\n",
      "|   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 22.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [2156.67]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13570.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  22.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [19362.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [8548.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [11032.75]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 23.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [2857.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  23.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 24.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10097.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  24.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [9639.67]\n",
      "|   |   |--- feature_1 >  25.50\n",
      "|   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |--- value: [11768.75]\n",
      "|   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |--- value: [3682.67]\n",
      "|   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [3188.50]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [3137.00]\n",
      "|   |   |   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [3686.50]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [6298.50]\n",
      "|   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- value: [3591.67]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- value: [11193.75]\n",
      "|   |--- feature_1 >  26.50\n",
      "|   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [13565.75]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [10633.25]\n",
      "|   |   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [10452.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12238.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [4524.67]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [4430.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [4521.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [9661.67]\n",
      "|   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |--- feature_1 <= 35.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 32.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [23010.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [5342.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [4733.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [14406.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  32.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9560.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [13760.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [12181.33]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [22022.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [18439.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [21949.00]\n",
      "|   |   |   |   |   |--- feature_1 >  35.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 36.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [6051.67]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [5268.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  36.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 39.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [21481.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 38.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6944.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  38.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [12543.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 38.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6693.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6947.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  38.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [7791.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  39.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [12553.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [25512.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9873.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [7157.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [10575.75]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [12269.33]\n",
      "|   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |--- value: [19090.33]\n",
      "|   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |--- value: [13796.33]\n",
      "|   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |--- feature_1 <= 36.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [3906.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [7889.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [8836.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [4530.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [17339.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [4342.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [4203.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [4542.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 35.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5200.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5403.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5642.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5633.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  35.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [5870.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9654.33]\n",
      "|   |   |   |   |   |--- feature_1 >  36.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [22090.33]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [30753.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 38.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5686.75]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [6368.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  38.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 39.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  39.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6578.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [7071.50]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [19527.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [6856.33]\n",
      "|   |   |--- feature_2 >  0.50\n",
      "|   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [4247.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [4142.25]\n",
      "|   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11416.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [4436.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [5032.00]\n",
      "|   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 32.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21137.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  32.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [15154.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [12131.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 35.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [26751.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  35.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 36.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19505.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  36.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [17479.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 38.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [6262.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  38.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 39.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [16122.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  39.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14877.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [18559.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14494.00]\n",
      "|   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11184.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11367.50]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11616.25]\n",
      "|   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [14046.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13163.25]\n",
      "|   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 32.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8563.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  32.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10834.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [9741.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 39.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 36.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 35.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [5323.33]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  35.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [5766.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  36.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [6056.25]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  39.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [6982.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [7111.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |--- value: [15361.67]\n",
      "|   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |--- feature_1 <= 39.50\n",
      "|   |   |   |   |   |--- feature_1 <= 35.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 31.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [16690.17]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14868.25]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 29.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [3465.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  29.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [16254.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9229.33]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 27.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [3482.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  27.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [15983.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  28.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 30.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  30.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [20390.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  31.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 32.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8288.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [4666.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  32.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 34.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [12970.80]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9343.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [10588.33]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  33.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [16530.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  34.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10014.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [5046.25]\n",
      "|   |   |   |   |   |--- feature_1 >  35.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 37.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 36.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21608.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21408.50]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  36.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21840.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [21749.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  37.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 38.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [18028.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9130.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  38.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12085.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [22899.00]\n",
      "|   |   |   |   |--- feature_1 >  39.50\n",
      "|   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |--- value: [8656.25]\n",
      "|   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [12848.40]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [15609.60]\n",
      "|   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 41.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 40.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [6898.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  40.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [6578.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  41.50\n",
      "|   |   |   |   |   |   |   |--- value: [10313.00]\n",
      "|--- feature_1 >  42.50\n",
      "|   |--- feature_1 <= 58.50\n",
      "|   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |--- feature_1 <= 53.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 50.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [8911.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [17444.25]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [15632.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [25265.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [12965.33]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [14526.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [15294.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [14751.33]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [15101.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9992.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9573.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [10496.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  50.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [27659.25]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [13858.75]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19088.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [10642.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19634.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19729.25]\n",
      "|   |   |   |   |   |--- feature_1 >  53.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 56.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 55.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 54.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [11510.33]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  54.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [12070.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 54.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [12188.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  54.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [11873.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  55.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12248.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12047.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  56.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 57.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13215.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [19772.50]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  57.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13018.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12228.00]\n",
      "|   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 43.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [18825.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  43.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [22214.25]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [14931.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8725.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9419.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [9947.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [9137.00]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 43.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8410.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  43.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [7527.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [19873.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [16570.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [14321.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [27645.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14780.00]\n",
      "|   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 56.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 50.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [29491.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [14636.50]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  50.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [9760.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [14887.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  51.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [15359.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [30542.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 53.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  53.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |--- feature_1 >  56.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 57.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [17756.75]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11551.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  57.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11937.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [23658.00]\n",
      "|   |   |   |--- feature_0 >  1.50\n",
      "|   |   |   |   |--- feature_1 <= 43.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- value: [31383.00]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- value: [27347.00]\n",
      "|   |   |   |   |--- feature_1 >  43.50\n",
      "|   |   |   |   |   |--- feature_1 <= 50.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [23829.60]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [10871.75]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [7343.33]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [26995.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [8235.00]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [17796.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [20787.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [31630.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [18117.60]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [11448.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [9939.75]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12526.75]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8517.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8849.33]\n",
      "|   |   |   |   |   |--- feature_1 >  50.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 57.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 54.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 53.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 <= 51.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_1 >  51.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  52.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [18095.00]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [16883.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  53.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [28089.50]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [32424.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  54.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 56.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 <= 55.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [22929.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [13450.25]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_1 >  55.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [11482.67]\n",
      "|   |   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- value: [22452.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  56.50\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [20784.67]\n",
      "|   |   |   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |   |--- value: [23737.00]\n",
      "|   |   |   |   |   |   |--- feature_1 >  57.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [15972.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11563.33]\n",
      "|   |   |--- feature_0 >  2.50\n",
      "|   |   |   |--- feature_1 <= 50.50\n",
      "|   |   |   |   |--- feature_1 <= 45.50\n",
      "|   |   |   |   |   |--- feature_1 <= 44.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 43.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [12779.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  43.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [7624.33]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 43.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [14592.25]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  43.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [18154.67]\n",
      "|   |   |   |   |   |--- feature_1 >  44.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [8078.50]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [7882.00]\n",
      "|   |   |   |   |--- feature_1 >  45.50\n",
      "|   |   |   |   |   |--- feature_1 <= 48.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 46.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [17180.75]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13948.67]\n",
      "|   |   |   |   |   |   |--- feature_1 >  46.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12970.50]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [8273.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13813.00]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  47.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [15832.75]\n",
      "|   |   |   |   |   |--- feature_1 >  48.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [15624.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13717.25]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 49.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [19963.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  49.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [17346.75]\n",
      "|   |   |   |--- feature_1 >  50.50\n",
      "|   |   |   |   |--- feature_1 <= 53.50\n",
      "|   |   |   |   |   |--- feature_1 <= 52.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 51.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [9719.25]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [8990.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  51.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [10369.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [9731.00]\n",
      "|   |   |   |   |   |--- feature_1 >  52.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [11351.33]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [10666.75]\n",
      "|   |   |   |   |--- feature_1 >  53.50\n",
      "|   |   |   |   |   |--- feature_1 <= 55.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 54.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11912.33]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [14029.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  54.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [17114.50]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13878.33]\n",
      "|   |   |   |   |   |--- feature_1 >  55.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 56.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11272.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  56.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 57.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12044.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  57.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11842.33]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 57.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 56.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11035.75]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  56.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [11166.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  57.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [11357.33]\n",
      "|   |--- feature_1 >  58.50\n",
      "|   |   |--- feature_0 <= 1.50\n",
      "|   |   |   |--- feature_1 <= 62.50\n",
      "|   |   |   |   |--- feature_1 <= 61.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 59.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [25100.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [17560.67]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  59.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13216.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [20967.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [25256.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [18661.67]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 59.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [18473.33]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [12126.50]\n",
      "|   |   |   |   |   |   |--- feature_1 >  59.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [18576.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13136.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [23921.67]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [18645.67]\n",
      "|   |   |   |   |--- feature_1 >  61.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [20297.67]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [14825.00]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [29122.00]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [24669.00]\n",
      "|   |   |   |--- feature_1 >  62.50\n",
      "|   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 63.50\n",
      "|   |   |   |   |   |   |   |--- value: [19474.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  63.50\n",
      "|   |   |   |   |   |   |   |--- value: [15485.00]\n",
      "|   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 63.50\n",
      "|   |   |   |   |   |   |   |--- value: [19153.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  63.50\n",
      "|   |   |   |   |   |   |   |--- value: [20159.00]\n",
      "|   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |--- feature_1 <= 63.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [13977.50]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [14558.00]\n",
      "|   |   |   |   |   |--- feature_1 >  63.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- value: [14402.00]\n",
      "|   |   |   |   |   |   |--- feature_0 >  0.50\n",
      "|   |   |   |   |   |   |   |--- value: [22188.00]\n",
      "|   |   |--- feature_0 >  1.50\n",
      "|   |   |   |--- feature_1 <= 63.50\n",
      "|   |   |   |   |--- feature_1 <= 61.50\n",
      "|   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 59.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [18177.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  59.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [23428.33]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [30678.33]\n",
      "|   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |--- feature_1 <= 59.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [21050.00]\n",
      "|   |   |   |   |   |   |   |--- feature_1 >  59.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [12835.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [13446.33]\n",
      "|   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |--- feature_1 <= 59.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [21641.50]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [15492.33]\n",
      "|   |   |   |   |   |   |--- feature_1 >  59.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [24911.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [29578.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 <= 60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [37636.33]\n",
      "|   |   |   |   |   |   |   |   |--- feature_1 >  60.50\n",
      "|   |   |   |   |   |   |   |   |   |--- value: [29306.00]\n",
      "|   |   |   |   |--- feature_1 >  61.50\n",
      "|   |   |   |   |   |--- feature_1 <= 62.50\n",
      "|   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [18245.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [17654.33]\n",
      "|   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13461.00]\n",
      "|   |   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [12968.00]\n",
      "|   |   |   |   |   |--- feature_1 >  62.50\n",
      "|   |   |   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [14180.50]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [36669.67]\n",
      "|   |   |   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [25207.00]\n",
      "|   |   |   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |   |   |--- value: [13984.33]\n",
      "|   |   |   |--- feature_1 >  63.50\n",
      "|   |   |   |   |--- feature_2 <= 0.50\n",
      "|   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |--- value: [19145.00]\n",
      "|   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |--- value: [36512.67]\n",
      "|   |   |   |   |--- feature_2 >  0.50\n",
      "|   |   |   |   |   |--- feature_0 <= 2.50\n",
      "|   |   |   |   |   |   |--- value: [30328.20]\n",
      "|   |   |   |   |   |--- feature_0 >  2.50\n",
      "|   |   |   |   |   |   |--- value: [14405.00]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.tree import export_text\n",
    "\n",
    "# Train the model\n",
    "dt_model = DecisionTreeRegressor().fit(X, y)\n",
    "print (dt_model, \"\\n\")\n",
    "\n",
    "# Visualize the model tree\n",
    "tree = export_text(dt_model)\n",
    "print(tree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7b3afcc5-d920-4bed-b948-32e22dc617cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSE: 111702378.059883\n",
      "RMSE: 10568.934575437725\n",
      "R2: 0.3174069264504036\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model using the test data\n",
    "predictions = dt_model.predict(X_test)\n",
    "mse = mean_squared_error(y_test, predictions)\n",
    "print(\"MSE:\", mse)\n",
    "rmse = np.sqrt(mse)\n",
    "print(\"RMSE:\", rmse)\n",
    "r2 = r2_score(y_test, predictions)\n",
    "print(\"R2:\", r2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "ea4130ee-f0b8-414b-adc5-9108d7169d04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10023399160382751"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score_training = r2_score(y_train,model.predict(X_train))\n",
    "r2_score_training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "54dbb8f4-90c9-4cf6-ab01-66a9c74726c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#feature importance\n",
    "\n",
    "plt.figure(figsize=(12,8))\n",
    "\n",
    "importance = dt_model.feature_importances_\n",
    "\n",
    "sb.barplot(x=importance, y=X.columns)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6389e47c-25cb-4118-a9a2-4e836e4ae9c0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
